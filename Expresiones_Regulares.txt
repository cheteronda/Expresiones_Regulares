Character	        Qué hace?

\	            Se utiliza para indicar que el siguiente carácter NO debe interpretarse de forma literal . Por ejemplo, el carácter 'w' por sí solo se interpretará como 'coincidir con el carácter w', pero el uso de '\w' significa 'coincidir con un carácter alfanumérico, incluido el guión bajo'.
                Se utiliza para indicar que un metacarácter debe interpretarse de forma literal . Por ejemplo, el metacarácter '.' significa 'coincidir con cualquier carácter excepto con una nueva línea', pero si preferimos que coincida con un carácter de punto, utilizaremos '\.'.

^	            Coincide con el comienzo de la entrada . Si está en modo multilínea, también coincide después de un carácter de salto de línea , es decir, con cada nueva línea.
                Cuando se usa en un patrón de conjunto ([^abc]), niega el conjunto; coincide con cualquier cosa que no esté entre corchetes.

$	            Coincide con el final de la entrada . Si está en modo multilínea, también coincide antes de un carácter de salto de línea , es decir, con cada final de línea.

*	            Coincide con el carácter anterior 0 o más veces.

+	            Coincide con el carácter anterior 1 o más veces .

?	            Coincide con el carácter anterior 0 o 1 vez .
                Cuando se usa después de los cuantificadores *, +, ? o {}, hace que el cuantificador no sea codicioso ; coincidirá con el número mínimo de veces en lugar de coincidir con el número máximo de veces.

.	            Coincide con cualquier carácter individual excepto el carácter de nueva línea .

(x)	            Coincide con "x" y recuerda la coincidencia. También se conoce como captura de paréntesis.

(?:x)	        Coincide con "x" pero NO recuerda la coincidencia . También conocido como paréntesis NO capturable.

x(?=y)	        Coincide con "x" solo si "x" va seguido de "y" . También se conoce como "lookahead".

x(?!y)	        Coincide con "x" solo si "x" NO va seguido de "y" . También se conoce como "lookahead negativo".

x|y	            Coincide con 'x' O 'y' .

{n}	            Coincide con el carácter anterior exactamente n veces.

{n,m}	        Coincide con el carácter anterior al menos n veces y como máximo m veces. n y m se pueden omitir si es cero.

[abc]       	Coincide con cualquiera de los caracteres incluidos.
                También se lo conoce como conjunto de caracteres. Puede crear un rango de caracteres utilizando el carácter de guión, como AZ (de la A a la Z).
                Tenga en cuenta que en los conjuntos de caracteres, los caracteres especiales (., *, +) no tienen ningún significado especial.

[^abc]	        Coincide con cualquier valor que NO esté entre corchetes . También conocido como conjunto de caracteres negativos.

[\b]            Coincide con una tecla de retroceso.

\b	            Coincide con un límite de palabra . Los límites se determinan cuando un carácter de palabra NO va seguido o NO va precedido de otro carácter de palabra.

\B	            Coincide con un límite que NO es de palabra.
                Los límites se determinan cuando dos caracteres adyacentes son caracteres de palabra O caracteres que no son de palabra.

\cX	            Coincide con un carácter de control. X debe estar entre A y Z inclusive.

\d	            Coincide con un carácter numérico. Igual que [0-9] o [0123456789].

\D	            Coincide con un carácter que NO es un dígito . Igual que [^0-9] o [^0123456789].

\f	            Coincide con un avance de formulario.

\n	            Coincide con un salto de línea.

\r	            Coincide con un retorno de carro.

\s	            Coincide con un único carácter de espacio en blanco . Esto incluye espacio, tabulación, salto de página y salto de línea.

\S	            Coincide con cualquier cosa que no sea un solo carácter de espacio en blanco.
                Cualquier cosa que no sea espacio, tabulación, salto de página y salto de línea.

\t	            Coincide con una pestaña.

\v	            Coincide con una pestaña vertical.

\w	            Coincide con cualquier carácter alfanumérico, incluido el guión bajo.
                Equivale a [A-Za-z0-9_].

\W	            Coincide con cualquier carácter que no sea alfanumérico, incluido el guión bajo. 
                Equivale a [^A-Za-z0-9_].

\x	            Una referencia posterior a la subcadena que coincide con la expresión entre paréntesis x. 
                x es un entero positivo.

\0	            Coincide con un carácter NULO .

\xhh	        Coincide con un carácter con el código hexadecimal de 2 dígitos.

\uhhhh	        Coincide con un carácter con el código hexadecimal de 4 dígitos.


<h2>Expresiones regulares: soluciones a problemas comunes</h2>

¿Cómo validar una dirección de CORREO ELECTRÓNICO con una expresión regular?
    No existe una solución 100% confiable, ya que el RFC es demasiado complejo. Esta es la mejor solución y debería funcionar el 99% de las veces.
    Consulta esta página para obtener más detalles sobre este problema. ¡Desactiva siempre la distinción entre mayúsculas y minúsculas!

    ^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.
    (aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$


¿Cómo validar una dirección IP (IPV4) con una expresión regular?
    Esto garantizará que cada número en la dirección IP esté entre 0 y 255, a diferencia de la versión que usa \d{1,3} que permitiría 999.999.999.999. 
    Si desea hacer coincidir una IP dentro de una cadena, elimine el ^ inicial y el $ final para usar \b (límites de palabras) en su lugar.

    ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$


¿Cómo validar una FECHA con una expresión regular?
    Nunca utilice una expresión regular para validar una fecha. 
    La expresión regular solo es útil para validar el formato de la fecha ingresada por el usuario. 
    Para la validez real de la fecha, es mejor confiar en el código real.

    Las siguientes expresiones validarán el número de días de un mes, pero NO manejarán la validación del año bisiesto; 
    por lo tanto, febrero puede tener 29 días cada año, pero no más.
    
    Formato de fecha ISO (aaaa-mm-dd)
    ^[0-9]{4}-(((0[13578]|(10|12))-(0[1-9]|[1-2][0-9]|3[0-1]))|(02-(0[1-9]|[1-2][0-9]))|((0[469]|11)-(0[1-9]|[1-2][0-9]|30)))$

    Formato de fecha ISO (aaaa-mm-dd) con separadores '-' o '/' o '.' o ' '. Fuerza el uso del mismo separador en todas las fechas.
    ^[0-9]{4}([- /.])(((0[13578]|(10|12))\1(0[1-9]|[1-2][0-9]|3[0-1]))|(02\1(0[1-9]|[1-2][0-9]))|((0[469]|11)\1(0[1-9]|[1-2][0-9]|30)))$

    Horas y minutos, formato 24 horas (HH:MM)
    ^(20|21|22|23|[01]\d|\d)((:[0-5]\d){1,2})$



¿Cómo validar NÚMEROS con una expresión regular?
    Depende. ¿Qué tipo de número? ¿Qué precisión? ¿Qué longitud? ¿Qué separador decimal quieres? Los siguientes ejemplos deberían ayudarte con las tareas más habituales.

    Números enteros positivos de longitud indefinida
    ^\d+$

    Números enteros positivos de longitud máxima (10 en nuestro ejemplo)
    ^\d{1,10}$

    Números enteros positivos de longitud fija (5 en nuestro ejemplo)
    ^\d{5}$

    Números enteros negativos de longitud indefinida
    ^-\d+$

    Números enteros negativos de longitud máxima (10 en nuestro ejemplo)
    ^-\d{1,10}$

    Números enteros negativos de longitud fija (5 en nuestro ejemplo)
    ^-\d{5}$

    Números enteros de longitud indefinida
    ^-?\d+$

    Números enteros de longitud máxima (10 en nuestro ejemplo)
    ^-?\d{1,10}$

    Números enteros de longitud fija (5 en nuestro ejemplo)
    ^-?\d{5}$

    Números de longitud indefinida con o sin decimales (1234.1234)
    ^-?\d*\.{0,1}\d+$

    Números con 2 decimales (.00)
    ^-?\d*\.\d{2}$

    Números de moneda con signo de dólar opcional y separadores de miles y 2 decimales opcionales ($1,000,00.00, 10000.12, 0.00)
    ^$?\-?([1-9]{1}[0-9]{0,2}(\,\d{3})*(\.\d{0,2})?|[1-9]{1}\d{0,}(\.\d{0,2})?|0(\.\d{0,2})?|(\.\d{1,2}))$|^\-?$?([1-9]{1}\d{0,2}(\,\d{3})*(\.\d{0,2})?|[1-9]{1}\d{0,}(\.\d{0,2})?|0(\.\d{0,2})?|(\.\d{1,2}))$|^\($?([1-9]{1}\d{0,2}(\,\d{3})*(\.\d{0,2})?|[1-9]{1}\d{0,}(\.\d{0,2})?|0(\.\d{0,2})?|(\.\d{1,2}))\)$

    Porcentaje de 0 a 100 con 2 decimales opcionales y signo % opcional al final (0, 0,00, 100,00, 100 %, 99,99 %)
    ^-?[0-9]{0,2}(\.[0-9]{1,2})?%?$|^-?(100)(\.[0]{1,2})?%?$


¿Cómo validar un código de color hexadecimal (#FFFFFF) con una expresión regular?
El signo # inicial es opcional y el código de color puede tomar el formato de 6 o 3 dígitos hexadecimales.
    ^#?([a-f0-9]{6}|[a-f0-9]{3})$


¿Cómo comprobar valores ALFANUMÉRICOS con una expresión regular?
Podrías utilizar \w, pero también tolera el carácter de subrayado.
    ^[a-zA-Z0-9]+$


¿Cómo puedo eliminar todas las etiquetas HTML de una cadena?
    Asegúrese de estar en modo global (indicador g), no distinguir entre mayúsculas y minúsculas y tener activada la opción de punto en todas las etiquetas. 
    Esta expresión regular coincidirá con todas las etiquetas HTML y sus atributos. 
    Esto DEJARÁ el contenido de las etiquetas dentro de la cadena.
    <(.|\n)+?>


¿Cómo puedo eliminar todas las líneas en blanco de una cadena usando una expresión regular?
    Asegúrese de estar en modo global y multilínea. Utilice una cadena vacía como valor de reemplazo.
    ^\s*\r?\n
